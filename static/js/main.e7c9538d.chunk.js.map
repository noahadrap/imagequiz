{"version":3,"sources":["components/Home.js","components/Login.js","components/NavigationBar.js","components/Header.js","components/Footer.js","components/quiz1.js","components/quiz2.js","components/quiz3.js","components/quiz4.js","components/quiz5.js","components/quiz6.js","components/quiz7.js","components/quiz8.js","components/quiz9.js","components/quiz10.js","components/quiz11.js","components/quiz12.js","components/quiz13.js","components/quiz14.js","components/quiz15.js","components/quiz16.js","components/quiz17.js","components/quiz18.js","components/quiz19.js","components/quiz20.js","components/quiz21.js","components/quiz22.js","components/quiz23.js","components/quiz24.js","components/quiz25.js","components/quiz26.js","components/quiz27.js","App.js","reportWebVitals.js","index.js"],"names":["Home","CardDeck","style","display","flexDirection","to","Card","width","flex","Img","variant","src","Body","Title","Login","props","history","useHistory","useState","email","setEmail","Row","Col","Form","onSubmit","push","onLoggedIn","Group","controlId","Label","Control","type","placeholder","onChange","event","target","value","Text","className","Button","NavigationBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","username","Header","Footer","Date","getFullYear","Quiz1","quiz1","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","length","onClick","window","location","reload","map","answerOption","nextQuestion","handleAnswerOptionClick","Quiz2","quiz2","Quiz3","quiz3","Quiz4","quiz4","Quiz5","quiz5","Quiz6","quiz6","Quiz7","quiz7","Quiz8","quiz8","Quiz9","quiz9","Quiz10","quiz10","Quiz11","quiz11","Quiz12","quiz12","Quiz13","quiz13","Quiz14","quiz14","Quiz15","quiz15","Quiz16","quiz16","Quiz17","quiz17","Quiz18","quiz18","Quiz19","quiz19","Quiz20","quiz20","Quiz21","quiz21","Quiz22","quiz22","Quiz23","quiz23","Quiz24","quiz24","Quiz25","quiz25","Quiz26","quiz26","Quiz27","quiz27","App","localStorage","getItem","setUsername","Container","fluid","exact","path","component","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7c9538d.chunk.js","sourcesContent":["import {Card, CardDeck} from \"react-bootstrap\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport api from \"../communication/api\"\r\nfunction Home () {\r\n    return (\r\n    \r\n      <div>\r\n        \r\n        <CardDeck style={{display: 'flex', flexDirection: 'row'}}>\r\n        <Link to='./quiz1'>\r\n        <Card style={{ width: '18rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/acacia.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Acacia</Card.Title>\r\n        </Card.Body>\r\n        </Card>\r\n        </Link>\r\n      \r\n        <Link to='./quiz2'>\r\n        <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/alyssum.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Alyssum</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n\r\n      <Link to='./quiz3'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/amaryllis.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Amaryllis</Card.Title>\r\n        </Card.Body>\r\n        </Card>\r\n        </Link>\r\n        </CardDeck>\r\n\r\n        <CardDeck style={{display: 'flex', flexDirection: 'row'}}>\r\n        <Link to='./quiz4'>\r\n        <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/aster.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Aster</Card.Title>\r\n      </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      <Link to='./quiz5'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/azalea.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Azalea</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      <Link to='./quiz6'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/begonia.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Begonia</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      </CardDeck>\r\n\r\n      <CardDeck style={{display: 'flex', flexDirection: 'row'}}>\r\n      <Link to='./quiz7'>\r\n        <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/buttercup.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Buttercup</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n\r\n      <Link to='./quiz8'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/calluna.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Calluna</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n\r\n      <Link to='./quiz9'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/camellia.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Camellia</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      </CardDeck>\r\n     \r\n      \r\n      <CardDeck style={{display: 'flex', flexDirection: 'row'}}>\r\n      <Link to='./quiz10'>\r\n        <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/cardinal.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Cardinal</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      \r\n      <Link to='./quiz11'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/carnation.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Carnation</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      <Link to='./quiz12'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/clover.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Clover</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      </CardDeck>\r\n\r\n      <CardDeck style={{display: 'flex', flexDirection: 'row'}}>\r\n      <Link to='./quiz13'>\r\n        <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/crownimperial.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Crown Imperial</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      <Link to='./quiz14'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/daffodil.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Daffodil</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      <Link to='./quiz15'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/dahlia.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Dahlia</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      </CardDeck>\r\n\r\n      <CardDeck style={{display: 'flex', flexDirection: 'row'}}>\r\n      <Link to='./quiz16'>\r\n        <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/daisy.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Daisy</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      <Link to='./quiz17'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/gladiolus.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Gladiolus</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      <Link to='./quiz18'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/lantana.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Lantana</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      </CardDeck>\r\n      \r\n\r\n      <CardDeck style={{display: 'flex', flexDirection: 'row'}}>\r\n      <Link to='./quiz19'>\r\n        <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/lily.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Lily</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      <Link to='./quiz20'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/lotus.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Lotus</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      <Link to='./quiz21'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/Marigold.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Marigold</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      </CardDeck>\r\n\r\n      <CardDeck style={{display: 'flex', flexDirection: 'row'}}>\r\n      <Link to='./quiz22'>\r\n        <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/orchid.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Orchid</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      <Link to='./quiz23'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/primrose.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Primrose</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      <Link to='./quiz24'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/sunflower.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Sunflower</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      </CardDeck>\r\n\r\n      <CardDeck style={{display: 'flex', flexDirection: 'row'}}>\r\n      <Link to='./quiz25'>\r\n        <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img width=\"300px\" variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/tickseed.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Tickseed</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      <Link to='./quiz26'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/tulip.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Tulip</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      <Link to='./quiz27'>\r\n      <Card style={{ width: '10rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src=\"https://habahram.blob.core.windows.net/flowers/zinnia.jpg\" />\r\n        <Card.Body>\r\n          <Card.Title>Zinnia</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      </Link>\r\n      </CardDeck>\r\n      </div>\r\n      \r\n\r\n      \r\n\r\n      \r\n\r\n      \r\n      \r\n    );\r\n}\r\n\r\nexport default Home;","import {Form, Button} from \"react-bootstrap\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction Login (props) {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    let onLoginSubmitted = () => {\r\n        history.push('/');\r\n        props.onLoggedIn(email)\r\n    }\r\n\r\n    let onEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n    return (\r\n        <Row><Col>\r\n        <Form onSubmit={onLoginSubmitted}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={onEmailChange} />\r\n                <br></br>\r\n                <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n                </Button>\r\n        </Form>\r\n        </Col></Row>\r\n    );\r\n}\r\n\r\nexport default Login;","import {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction NavigationBar (props) {\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">Welcome to the Image Quiz!</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n            <Nav.Link><Link to=\"/\">Home</Link></Nav.Link>\r\n            <br />\r\n            <Nav.Link>\r\n                {\r\n                    props.username === '' ?\r\n                    <Link to='/login'>Login</Link>\r\n                    :\r\n                    <Link to='/logout'>{props.username}, Logout</Link>\r\n                }\r\n                    \r\n            </Nav.Link>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n            \r\n        \r\n    );\r\n}\r\n\r\nexport default NavigationBar;","\r\n\r\nfunction Header () {\r\n    return (\r\n        <h2>Practicum 6</h2>\r\n    );\r\n}\r\n\r\nexport default Header;","\r\n\r\nfunction Footer () {\r\n    return (\r\n        <div>&copy; Copyright {new Date().getFullYear()}, All Rights Reserved.</div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz1 (props) {\r\n    const history = useHistory();\r\n    const quiz1 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Acaia', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How Long Do Acaia Trees live?',\r\n            answerOptions: [\r\n                { answerText: '10-20 years', isCorrect: false },\r\n                { answerText: '20-30 years', isCorrect: true },\r\n                { answerText: '30-40 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What animals feed off this?',\r\n            answerOptions: [\r\n                { answerText: 'Both of these', isCorrect: true },\r\n                { answerText: 'Elephants', isCorrect: false },\r\n                { answerText: 'Giraffes', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where do these trees grow?',\r\n            answerOptions: [\r\n                { answerText: 'Austrailia', isCorrect: false },\r\n                { answerText: 'South Africa', isCorrect: false },\r\n                { answerText: 'both of these', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What protection do these trees have for herbivores?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Termites', isCorrect: false },\r\n                { answerText: 'Poisonous leaves', isCorrect: false },\r\n                { answerText: 'Thorns', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What color do these leaves have when blooming?',\r\n            answerOptions: [\r\n                { answerText: 'Red', isCorrect: false },\r\n                { answerText: 'Green', isCorrect: false },\r\n                { answerText: 'Yellow', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz1.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz1.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz1.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz1[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/acacia.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz1[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz1;\r\n","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz2 (props) {\r\n    const history = useHistory();\r\n    const quiz2 = [\r\n        \r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Alyssum', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How are the smell of these best described?',\r\n            answerOptions: [\r\n                { answerText: 'No smell', isCorrect: false },\r\n                { answerText: 'Sweet', isCorrect: true },\r\n                { answerText: 'Sour', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these spread?',\r\n            answerOptions: [\r\n                { answerText: '3 to 6 inches', isCorrect: true },\r\n                { answerText: '6 to 9 inches', isCorrect: false },\r\n                { answerText: '9 to 12 inches', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Only to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this classify as?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Flower', isCorrect: false },\r\n                { answerText: 'Tree', isCorrect: false },\r\n                { answerText: 'Evergreen', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How Many Seeds are in a cell?',\r\n            answerOptions: [\r\n                { answerText: '4', isCorrect: false },\r\n                { answerText: '6', isCorrect: false },\r\n                { answerText: '1', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz2.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz2.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz2.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz2[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/alyssum.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz2[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz2;\r\n","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz3 (props) {\r\n    const history = useHistory();\r\n    const quiz3 = [\r\n        \r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Amaryllis', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What is this flower known to symbolize?',\r\n            answerOptions: [\r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: true },\r\n                { answerText: 'Hate', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"How long is this flower's lifespan?\",\r\n            answerOptions: [\r\n                { answerText: '6 weeks', isCorrect: true },\r\n                { answerText: '2 weeks', isCorrect: false },\r\n                { answerText: '5 months', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Only to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How tall do these grow?',\r\n            answerOptions: [\r\n                \r\n                { answerText: '0-12 inches', isCorrect: false },\r\n                { answerText: '36-48 inches', isCorrect: false },\r\n                { answerText: '18-36 inches', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where are these native to?',\r\n            answerOptions: [\r\n                { answerText: 'Austrailia', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: false },\r\n                { answerText: 'Africa', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz3.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz3.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz3.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz3[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/amaryllis.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz3[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz3;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz4 (props) {\r\n    const history = useHistory();\r\n    const quiz4 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Aster', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'When does this flower bloom?',\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: true },\r\n                { answerText: 'Winter', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"How long is this flower's lifespan?\",\r\n            answerOptions: [\r\n                { answerText: '6 weeks', isCorrect: true },\r\n                { answerText: '2 weeks', isCorrect: false },\r\n                { answerText: '5 months', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long is the germination period of this?',\r\n            answerOptions: [\r\n                { answerText: '30-40 days', isCorrect: false },\r\n                { answerText: '0-10 days', isCorrect: false },\r\n                { answerText: '10-20 days', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'When does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Love', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz4.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz4.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz4.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz4[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/aster.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz4[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz4;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz5 (props) {\r\n    const history = useHistory();\r\n    const quiz5 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Azalea', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '50 years', isCorrect: true },\r\n                { answerText: '20 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"How long is this flower's lifespan?\",\r\n            answerOptions: [\r\n                { answerText: '6 weeks', isCorrect: true },\r\n                { answerText: '2 weeks', isCorrect: false },\r\n                { answerText: '5 months', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: false },\r\n                { answerText: 'All over the world', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Love', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz5.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz5.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz5.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz5[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/azalea.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz5[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz5;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz6 (props) {\r\n    const history = useHistory();\r\n    const quiz6 = [\r\n        \r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Begonia', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '2-3 years', isCorrect: true },\r\n                { answerText: '4-5 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: false },\r\n                { answerText: 'Central America', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Caution', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz6.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz6.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz6.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz6[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/begonia.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz6[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz6;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz7(props) {\r\n    const history = useHistory();\r\n    const quiz7 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Buttercup', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '10 years', isCorrect: true },\r\n                { answerText: '4-5 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Humility', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz7.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz7.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz7.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz7[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/buttercup.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz7[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz7;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz8(props) {\r\n    const history = useHistory();\r\n    const quiz8 = [\r\n        \r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Calluna', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '20 year', isCorrect: false },\r\n                { answerText: '30-40 years', isCorrect: true },\r\n                { answerText: '10 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Good Luck', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz8.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz8.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz8.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz8[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/calluna.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz8[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz8;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz9(props) {\r\n    const history = useHistory();\r\n    const quiz9 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Camellia', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '50 years', isCorrect: false },\r\n                { answerText: '100 years', isCorrect: true },\r\n                { answerText: '70 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Winter', isCorrect: true },\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Love', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz9.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz9.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz9.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz9[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/camellia.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz9[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz9;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz10(props) {\r\n    const history = useHistory();\r\n    const quiz10 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Cardinal', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '10 years', isCorrect: false },\r\n                { answerText: '3-4 years', isCorrect: true },\r\n                { answerText: '20 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Love', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz10.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz10.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz10.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz10[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/cardinal.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz10[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz10;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz11(props) {\r\n    const history = useHistory();\r\n    const quiz11 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Carnation', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '10 years', isCorrect: false },\r\n                { answerText: '3-4 years', isCorrect: true },\r\n                { answerText: '20 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: false },\r\n                { answerText: 'Mediterranean', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Love', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz11.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz11.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz11.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz11[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/carnation.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz11[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz11;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz12(props) {\r\n    const history = useHistory();\r\n    const quiz12 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Clover', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '10 years', isCorrect: false },\r\n                { answerText: '2 years', isCorrect: true },\r\n                { answerText: '5 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: false },\r\n                { answerText: 'South America', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Good Luck', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz12.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz12.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz12.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz12[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/clover.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz12[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz12;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz13(props) {\r\n    const history = useHistory();\r\n    const quiz13 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Crown Imperial', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '2-3 weeks', isCorrect: true },\r\n                { answerText: '1 year', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: false },\r\n                { answerText: 'Turkey', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Royalty', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz13.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz13.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz13.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz13[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/crownimperial.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz13[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz13;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz14(props) {\r\n    const history = useHistory();\r\n    const quiz14 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Daffodil', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '6 months', isCorrect: true },\r\n                { answerText: '1 year', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: true },\r\n                { answerText: 'Asia', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Rebirth', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz14.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz14.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz14.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz14[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/daffodil.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz14[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz14;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz15(props) {\r\n    const history = useHistory();\r\n    const quiz15 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '4-6 days', isCorrect: true },\r\n                { answerText: '2 weeks', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: true },\r\n                { answerText: 'Asia', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Elegance', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz15.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz15.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz15.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz15[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/dahlia.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz15[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz15;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz16(props) {\r\n    const history = useHistory();\r\n    const quiz16 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: true },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '3 months', isCorrect: false },\r\n                { answerText: '4-6 weeks', isCorrect: true },\r\n                { answerText: '2 weeks', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: true },\r\n                { answerText: 'Asia', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Purity', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz16.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz16.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz16.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz16[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/daisy.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz16[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz16;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz17(props) {\r\n    const history = useHistory();\r\n    const quiz17 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Gladiolus', isCorrect: true },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '3 months', isCorrect: false },\r\n                { answerText: '90 days', isCorrect: true },\r\n                { answerText: '2 weeks', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: true },\r\n                { answerText: 'North America', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Gladiators', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz17.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz17.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz17.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz17[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/gladiolus.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz17[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz17;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz18(props) {\r\n    const history = useHistory();\r\n    const quiz18 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Lantana', isCorrect: true },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '4 months', isCorrect: true },\r\n                { answerText: '2 weeks', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'South America', isCorrect: true },\r\n                { answerText: 'North America', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Rigor', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz18.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz18.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz18.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz18[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/lantana.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz18[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz18;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz19(props) {\r\n    const history = useHistory();\r\n    const quiz19 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '4 months', isCorrect: false },\r\n                { answerText: '2 weeks', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Northern Hemisphere', isCorrect: true },\r\n                { answerText: 'North America', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Purity', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz19.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz19.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz19.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz19[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/lily.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz19[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz19;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz20(props) {\r\n    const history = useHistory();\r\n    const quiz20 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lotus', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '4 months', isCorrect: false },\r\n                { answerText: '1000+ years', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Purity', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz20.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz20.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz20.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz20[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/lotus.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz20[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz20;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz21(props) {\r\n    const history = useHistory();\r\n    const quiz21 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Marigold', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '4 months', isCorrect: false },\r\n                { answerText: '2 months', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: false },\r\n                { answerText: 'Central America', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Passion', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz21.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz21.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz21.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz21[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/Marigold.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz21[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz21;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz22(props) {\r\n    const history = useHistory();\r\n    const quiz22 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Orchid', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '100 years', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: true},\r\n                { answerText: 'Central America', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Fertility', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz22.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz22.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz22.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz22[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/orchid.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz22[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz22;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz23(props) {\r\n    const history = useHistory();\r\n    const quiz23 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Primrose', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '5-6 years', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: true},\r\n                { answerText: 'Central America', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: true },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Fertility', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n                { answerText: 'No', isCorrect: false },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz23.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz23.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz23.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz23[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/primrose.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz23[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz23;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz24(props) {\r\n    const history = useHistory();\r\n    const quiz24 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Sunflower', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '8-12 weeks', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: true},\r\n                { answerText: 'Europe', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Loyalty', isCorrect: true },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Fertility', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz24.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz24.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz24.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz24[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/sunflower.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz24[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz24;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz25(props) {\r\n    const history = useHistory();\r\n    const quiz25 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Tickseed', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '3-4 years', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: true},\r\n                { answerText: 'Europe', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Cheerfulness', isCorrect: true },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Fertility', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz25.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz25.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz25.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz25[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/tickseed.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz25[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz25;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz26(props) {\r\n    const history = useHistory();\r\n    const quiz26 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Tulip', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '1-2 weeks', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: false},\r\n                { answerText: 'Europe', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: true },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Fertility', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n                { answerText: 'No', isCorrect: false },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz26.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz26.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz26.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz26[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/tulip.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz26[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz26;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz27(props) {\r\n    const history = useHistory();\r\n    const quiz27 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Zinnia', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '7-12 days', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North and Central America', isCorrect: false},\r\n                { answerText: 'Europe', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Saying Goodbye', isCorrect: true },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Fertility', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true},\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz27.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz27.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{Quiz27.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz27[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/zinnia.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz27[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz27;","import {HashRouter, Switch, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport NavigationBar from './components/NavigationBar';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './App.css';\nimport { Container } from 'react-bootstrap';\nimport React, { useEffect, useState } from \"react\";\nimport Quiz1 from './components/quiz1';\nimport Quiz2 from './components/quiz2';\nimport Quiz3 from './components/quiz3';\nimport Quiz4 from './components/quiz4';\nimport Quiz5 from './components/quiz5';\nimport Quiz6 from './components/quiz6';\nimport Quiz7 from './components/quiz7';\nimport Quiz8 from './components/quiz8';\nimport Quiz9 from './components/quiz9';\nimport Quiz10 from './components/quiz10';\nimport Quiz11 from './components/quiz11';\nimport Quiz12 from './components/quiz12';\nimport Quiz13 from './components/quiz13';\nimport Quiz14 from './components/quiz14';\nimport Quiz15 from './components/quiz15';\nimport Quiz16 from './components/quiz16';\nimport Quiz17 from './components/quiz17';\nimport Quiz18 from './components/quiz18';\nimport Quiz19 from './components/quiz19';\nimport Quiz20 from './components/quiz20';\nimport Quiz21 from './components/quiz21';\nimport Quiz22 from './components/quiz22';\nimport Quiz23 from './components/quiz23';\nimport Quiz24 from './components/quiz24';\nimport Quiz25 from './components/quiz25';\nimport Quiz26 from './components/quiz26';\nimport Quiz27 from './components/quiz27';\n\nfunction App() {\n\n  const [username, setUsername] = useState(localStorage.getItem('username') || '');\n  let onLoggedIn = (email) => {\n    localStorage.setItem('username', email);\n    setUsername(email);\n  }\n  return (\n    <HashRouter>\n      <Container fluid>\n      <Header />\n      <NavigationBar username={username}/>\n      <Switch>\n        <Route exact path=\"/\" component={Home}>\n          <Home />\n          </Route>\n        <Route path=\"/login\">\n        <Login onLoggedIn= {onLoggedIn} />\n        </Route>\n        <Route path=\"/quiz1\" component={Quiz1}/>\n        <Route path=\"/quiz2\" component={Quiz2}/>\n        <Route path=\"/quiz3\" component={Quiz3}/>\n        <Route path=\"/quiz4\" component={Quiz4}/>\n        <Route path=\"/quiz5\" component={Quiz5}/>\n        <Route path=\"/quiz6\" component={Quiz6}/>\n        <Route path=\"/quiz7\" component={Quiz7}/>\n        <Route path=\"/quiz8\" component={Quiz8}/>\n        <Route path=\"/quiz9\" component={Quiz9}/>\n        <Route path=\"/quiz10\" component={Quiz10}/>\n        <Route path=\"/quiz11\" component={Quiz11}/>\n        <Route path=\"/quiz12\" component={Quiz12}/>\n        <Route path=\"/quiz13\" component={Quiz13}/>\n        <Route path=\"/quiz14\" component={Quiz14}/>\n        <Route path=\"/quiz15\" component={Quiz15}/>\n        <Route path=\"/quiz16\" component={Quiz16}/>\n        <Route path=\"/quiz17\" component={Quiz17}/>\n        <Route path=\"/quiz18\" component={Quiz18}/>\n        <Route path=\"/quiz19\" component={Quiz19}/>\n        <Route path=\"/quiz20\" component={Quiz20}/>\n        <Route path=\"/quiz21\" component={Quiz21}/>\n        <Route path=\"/quiz22\" component={Quiz22}/>\n        <Route path=\"/quiz23\" component={Quiz23}/>\n        <Route path=\"/quiz24\" component={Quiz24}/>\n        <Route path=\"/quiz25\" component={Quiz25}/>\n        <Route path=\"/quiz26\" component={Quiz26}/>\n        <Route path=\"/quiz27\" component={Quiz27}/>\n      </Switch>\n      <Footer />\n      </Container>\n    </HashRouter>\n    );\n  };\n  export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}