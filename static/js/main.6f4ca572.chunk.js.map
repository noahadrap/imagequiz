{"version":3,"sources":["communication/api.js","components/Home.js","components/Login.js","components/NavigationBar.js","components/Header.js","components/Footer.js","components/quiz1.js","components/quiz2.js","components/quiz3.js","components/quiz4.js","components/quiz5.js","components/quiz6.js","components/quiz7.js","components/quiz8.js","components/quiz9.js","components/quiz10.js","components/quiz11.js","components/quiz12.js","components/quiz13.js","components/quiz14.js","components/quiz15.js","components/quiz16.js","components/quiz17.js","components/quiz18.js","components/quiz19.js","components/quiz20.js","components/quiz21.js","components/quiz22.js","components/quiz23.js","components/quiz24.js","components/quiz25.js","components/quiz26.js","components/quiz27.js","App.js","reportWebVitals.js","index.js"],"names":["apiHost","api","getQuizzes","fetch","then","response","json","getFlowers","getQuiz","id","saveScore","score","quizid","username","method","headers","body","JSON","stringify","usernsme","Home","useState","flowers","setFlowers","useEffect","length","x","catch","e","console","log","CardDeck","style","display","flexDirection","map","flower","index","to","pathname","state","Card","width","flex","Img","variant","src","picture","Body","Title","name","Login","props","history","useHistory","email","setEmail","Row","Col","Form","onSubmit","push","onLoggedIn","Group","controlId","Label","Control","type","placeholder","onChange","event","target","value","Text","className","Button","NavigationBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","Header","Footer","Date","getFullYear","Quiz","currentQuestion","setCurrentQuestion","showScore","setShowScore","setScore","quiz","setQuiz","location","localStorage","getItem","onClick","window","reload","questionText","image","answerOptions","answerOption","isCorrect","nextQuestion","handleAnswerOptionClick","answerText","Quiz2","quiz2","Quiz3","quiz3","Quiz4","quiz4","Quiz5","quiz5","Quiz6","quiz6","Quiz7","quiz7","Quiz8","quiz8","Quiz9","quiz9","Quiz10","quiz10","Quiz11","quiz11","Quiz12","quiz12","Quiz13","quiz13","Quiz14","quiz14","Quiz15","quiz15","Quiz16","quiz16","Quiz17","quiz17","Quiz18","quiz18","Quiz19","quiz19","Quiz20","quiz20","Quiz21","quiz21","Quiz22","quiz22","Quiz23","quiz23","Quiz24","quiz24","Quiz25","quiz25","Quiz26","quiz26","Quiz27","quiz27","App","setUsername","Container","fluid","exact","path","component","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f4ca572.chunk.js","sourcesContent":["let apiHost = \"https://noahadrap-imagequiz.herokuapp.com\"\r\n\r\nlet getQuizzes = () => {\r\n    return fetch(apiHost + '/quizzes')\r\n    .then (response => response.json());\r\n}\r\n\r\nlet getQuiz = (id) => {\r\n    return fetch(apiHost + '/quiz/' + id)\r\n    .then (response => response.json());\r\n}\r\n\r\nlet getFlowers = () => {\r\n    return fetch(apiHost + '/flowers')\r\n    .then (response => response.json());\r\n}\r\n\r\nlet saveScore = (score, quizid, username) => {\r\n    return fetch(apiHost + '/score', {\r\n        method: 'post',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({score : score, quizid : quizid, usernsme : username})\r\n    \r\n    });\r\n}\r\nlet api = {\r\n    getQuizzes : getQuizzes,\r\n    getFlowers : getFlowers,\r\n    getQuiz : getQuiz,\r\n    saveScore : saveScore\r\n};\r\n\r\nexport default api;","import {Card, CardDeck} from \"react-bootstrap\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport api from \"../communication/api\"\r\nfunction Home () {\r\n  const [flowers, setFlowers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (flowers.length == 0) {\r\n      api.getFlowers()\r\n      .then(x => setFlowers(x))\r\n      .catch(e => console.log(e));\r\n    }\r\n  })\r\n    return (\r\n    \r\n      <div>\r\n        <CardDeck style={{display: 'flex', flexDirection: 'row'}}>\r\n        {flowers.map((flower, index) => \r\n        <Link to={{pathname:'/quiz', state: {quizid: index + 1}}}>\r\n        <Card style={{ width: '18rem', flex: 1 }}>\r\n        <Card.Img variant=\"top\" src={flower.picture} />\r\n        <Card.Body>\r\n          <Card.Title>{flower.name}</Card.Title>\r\n        </Card.Body>\r\n        </Card>\r\n        </Link>\r\n        )}\r\n      \r\n \r\n      </CardDeck>\r\n      </div>\r\n      \r\n\r\n      \r\n\r\n      \r\n\r\n      \r\n      \r\n    );\r\n}\r\n\r\nexport default Home;","import {Form, Button} from \"react-bootstrap\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction Login (props) {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    let onLoginSubmitted = () => {\r\n        history.push('/');\r\n        props.onLoggedIn(email)\r\n    }\r\n\r\n    let onEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n    return (\r\n        <Row><Col>\r\n        <Form onSubmit={onLoginSubmitted}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={onEmailChange} />\r\n                <br></br>\r\n                <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n                </Button>\r\n        </Form>\r\n        </Col></Row>\r\n    );\r\n}\r\n\r\nexport default Login;","import {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction NavigationBar (props) {\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">Welcome to the Image Quiz!</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n            <Nav.Link><Link to=\"/\">Home</Link></Nav.Link>\r\n            <br />\r\n            <Nav.Link>\r\n                {\r\n                    props.username === '' ?\r\n                    <Link to='/login'>Login</Link>\r\n                    :\r\n                    <Link to='/logout'>{props.username}, Logout</Link>\r\n                }\r\n                    \r\n            </Nav.Link>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n            \r\n        \r\n    );\r\n}\r\n\r\nexport default NavigationBar;","\r\n\r\nfunction Header () {\r\n    return (\r\n        <h2>Practicum 6</h2>\r\n    );\r\n}\r\n\r\nexport default Header;","\r\n\r\nfunction Footer () {\r\n    return (\r\n        <div>&copy; Copyright {new Date().getFullYear()}, All Rights Reserved.</div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport api from '../communication/api'\r\nfunction Quiz (props) {\r\n    const history = useHistory();\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n    const [quiz, setQuiz] = useState([]);\r\n    useEffect(() => {\r\n        if (quiz.length == 0) {\r\n        let id = props.location.state.quizid;\r\n        console.log(id)\r\n          api.getQuiz(id)\r\n          .then(x => setQuiz(x))\r\n          .catch(e => console.log(e));\r\n        }\r\n      })\r\n\r\n      useEffect (() => {\r\n          if (showScore) {\r\n              api.saveScore(score, props.location.state.quizid, localStorage.getItem('username'))\r\n              .then(() => console.log('this score was saved successfully'))\r\n              .catch(e => console.log(e));\r\n          }\r\n      })\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : quiz.length > 0 ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz[currentQuestion].questionText}</div>\r\n                        <img src={quiz[currentQuestion].image.picture}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t) : ''}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz;\r\n","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz2 (props) {\r\n    const history = useHistory();\r\n    const quiz2 = [\r\n        \r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Alyssum', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How are the smell of these best described?',\r\n            answerOptions: [\r\n                { answerText: 'No smell', isCorrect: false },\r\n                { answerText: 'Sweet', isCorrect: true },\r\n                { answerText: 'Sour', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these spread?',\r\n            answerOptions: [\r\n                { answerText: '3 to 6 inches', isCorrect: true },\r\n                { answerText: '6 to 9 inches', isCorrect: false },\r\n                { answerText: '9 to 12 inches', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Only to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this classify as?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Flower', isCorrect: false },\r\n                { answerText: 'Tree', isCorrect: false },\r\n                { answerText: 'Evergreen', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How Many Seeds are in a cell?',\r\n            answerOptions: [\r\n                { answerText: '4', isCorrect: false },\r\n                { answerText: '6', isCorrect: false },\r\n                { answerText: '1', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz2.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz2.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz2.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz2[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/alyssum.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz2[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz2;\r\n","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz3 (props) {\r\n    const history = useHistory();\r\n    const quiz3 = [\r\n        \r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Amaryllis', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What is this flower known to symbolize?',\r\n            answerOptions: [\r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: true },\r\n                { answerText: 'Hate', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"How long is this flower's lifespan?\",\r\n            answerOptions: [\r\n                { answerText: '6 weeks', isCorrect: true },\r\n                { answerText: '2 weeks', isCorrect: false },\r\n                { answerText: '5 months', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Only to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How tall do these grow?',\r\n            answerOptions: [\r\n                \r\n                { answerText: '0-12 inches', isCorrect: false },\r\n                { answerText: '36-48 inches', isCorrect: false },\r\n                { answerText: '18-36 inches', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where are these native to?',\r\n            answerOptions: [\r\n                { answerText: 'Austrailia', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: false },\r\n                { answerText: 'Africa', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz3.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz3.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz3.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz3[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/amaryllis.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz3[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz3;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz4 (props) {\r\n    const history = useHistory();\r\n    const quiz4 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Aster', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'When does this flower bloom?',\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: true },\r\n                { answerText: 'Winter', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"How long is this flower's lifespan?\",\r\n            answerOptions: [\r\n                { answerText: '6 weeks', isCorrect: true },\r\n                { answerText: '2 weeks', isCorrect: false },\r\n                { answerText: '5 months', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long is the germination period of this?',\r\n            answerOptions: [\r\n                { answerText: '30-40 days', isCorrect: false },\r\n                { answerText: '0-10 days', isCorrect: false },\r\n                { answerText: '10-20 days', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'When does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Love', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz4.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz4.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz4.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz4[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/aster.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz4[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz4;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz5 (props) {\r\n    const history = useHistory();\r\n    const quiz5 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Azalea', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '50 years', isCorrect: true },\r\n                { answerText: '20 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"How long is this flower's lifespan?\",\r\n            answerOptions: [\r\n                { answerText: '6 weeks', isCorrect: true },\r\n                { answerText: '2 weeks', isCorrect: false },\r\n                { answerText: '5 months', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: false },\r\n                { answerText: 'All over the world', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Love', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz5.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz5.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz5.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz5[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/azalea.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz5[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz5;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz6 (props) {\r\n    const history = useHistory();\r\n    const quiz6 = [\r\n        \r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Begonia', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '2-3 years', isCorrect: true },\r\n                { answerText: '4-5 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: false },\r\n                { answerText: 'Central America', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Caution', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz6.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz6.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz6.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz6[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/begonia.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz6[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz6;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz7(props) {\r\n    const history = useHistory();\r\n    const quiz7 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Buttercup', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '10 years', isCorrect: true },\r\n                { answerText: '4-5 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Humility', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz7.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz7.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz7.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz7[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/buttercup.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz7[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz7;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz8(props) {\r\n    const history = useHistory();\r\n    const quiz8 = [\r\n        \r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Calluna', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '20 year', isCorrect: false },\r\n                { answerText: '30-40 years', isCorrect: true },\r\n                { answerText: '10 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Good Luck', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz8.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz8.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz8.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz8[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/calluna.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz8[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz8;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz9(props) {\r\n    const history = useHistory();\r\n    const quiz9 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Camellia', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '50 years', isCorrect: false },\r\n                { answerText: '100 years', isCorrect: true },\r\n                { answerText: '70 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Winter', isCorrect: true },\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Love', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz9.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz9.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz9.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz9[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/camellia.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz9[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz9;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz10(props) {\r\n    const history = useHistory();\r\n    const quiz10 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Cardinal', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '10 years', isCorrect: false },\r\n                { answerText: '3-4 years', isCorrect: true },\r\n                { answerText: '20 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Love', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz10.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz10.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz10.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz10[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/cardinal.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz10[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz10;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz11(props) {\r\n    const history = useHistory();\r\n    const quiz11 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Carnation', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '10 years', isCorrect: false },\r\n                { answerText: '3-4 years', isCorrect: true },\r\n                { answerText: '20 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: false },\r\n                { answerText: 'Mediterranean', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Love', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz11.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz11.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz11.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz11[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/carnation.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz11[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz11;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz12(props) {\r\n    const history = useHistory();\r\n    const quiz12 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Clover', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '10 years', isCorrect: false },\r\n                { answerText: '2 years', isCorrect: true },\r\n                { answerText: '5 years', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: false },\r\n                { answerText: 'South America', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Hate', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Good Luck', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz12.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz12.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz12.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz12[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/clover.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz12[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz12;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz13(props) {\r\n    const history = useHistory();\r\n    const quiz13 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Crown Imperial', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '2-3 weeks', isCorrect: true },\r\n                { answerText: '1 year', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: false },\r\n                { answerText: 'Turkey', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Royalty', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz13.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz13.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz13.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz13[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/crownimperial.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz13[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz13;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz14(props) {\r\n    const history = useHistory();\r\n    const quiz14 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Daffodil', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '6 months', isCorrect: true },\r\n                { answerText: '1 year', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: true },\r\n                { answerText: 'Asia', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Rebirth', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz14.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz14.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz14.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz14[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/daffodil.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz14[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz14;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz15(props) {\r\n    const history = useHistory();\r\n    const quiz15 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: true },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '4-6 days', isCorrect: true },\r\n                { answerText: '2 weeks', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: true },\r\n                { answerText: 'Asia', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Elegance', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz15.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz15.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz15.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz15[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/dahlia.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz15[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz15;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz16(props) {\r\n    const history = useHistory();\r\n    const quiz16 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Daisy', isCorrect: true },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '3 months', isCorrect: false },\r\n                { answerText: '4-6 weeks', isCorrect: true },\r\n                { answerText: '2 weeks', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: true },\r\n                { answerText: 'Asia', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Purity', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz16.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz16.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz16.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz16[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/daisy.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz16[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz16;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz17(props) {\r\n    const history = useHistory();\r\n    const quiz17 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Gladiolus', isCorrect: true },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '3 months', isCorrect: false },\r\n                { answerText: '90 days', isCorrect: true },\r\n                { answerText: '2 weeks', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: true },\r\n                { answerText: 'North America', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Gladiators', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz17.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz17.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz17.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz17[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/gladiolus.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz17[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz17;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz18(props) {\r\n    const history = useHistory();\r\n    const quiz18 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: false },\r\n                { answerText: 'Lantana', isCorrect: true },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '4 months', isCorrect: true },\r\n                { answerText: '2 weeks', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'South America', isCorrect: true },\r\n                { answerText: 'North America', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Rigor', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz18.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz18.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz18.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz18[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/lantana.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz18[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz18;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz19(props) {\r\n    const history = useHistory();\r\n    const quiz19 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lily', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '4 months', isCorrect: false },\r\n                { answerText: '2 weeks', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Northern Hemisphere', isCorrect: true },\r\n                { answerText: 'North America', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Purity', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz19.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz19.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz19.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz19[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/lily.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz19[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz19;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz20(props) {\r\n    const history = useHistory();\r\n    const quiz20 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Lotus', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '4 months', isCorrect: false },\r\n                { answerText: '1000+ years', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: false },\r\n                { answerText: 'Asia', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Purity', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz20.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz20.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz20.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz20[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/lotus.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz20[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz20;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz21(props) {\r\n    const history = useHistory();\r\n    const quiz21 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Marigold', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '4 months', isCorrect: false },\r\n                { answerText: '2 months', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: false },\r\n                { answerText: 'Central America', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Passion', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'No', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz21.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz21.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz21.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz21[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/Marigold.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz21[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz21;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz22(props) {\r\n    const history = useHistory();\r\n    const quiz22 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Orchid', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '100 years', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: true},\r\n                { answerText: 'Central America', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: false },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Fertility', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz22.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz22.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz22.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz22[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/orchid.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz22[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz22;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz23(props) {\r\n    const history = useHistory();\r\n    const quiz23 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Primrose', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '5-6 years', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'Europe', isCorrect: true},\r\n                { answerText: 'Central America', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: true },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Fertility', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n                { answerText: 'No', isCorrect: false },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz23.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz23.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz23.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz23[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/primrose.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz23[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz23;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz24(props) {\r\n    const history = useHistory();\r\n    const quiz24 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Sunflower', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '8-12 weeks', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: true},\r\n                { answerText: 'Europe', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Loyalty', isCorrect: true },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Fertility', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz24.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz24.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz24.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz24[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/sunflower.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz24[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz24;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz25(props) {\r\n    const history = useHistory();\r\n    const quiz25 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Tickseed', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '3-4 years', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: false },\r\n                { answerText: 'Summer', isCorrect: true },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: true},\r\n                { answerText: 'Europe', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Cheerfulness', isCorrect: true },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Fertility', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz25.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz25.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz25.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz25[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/tickseed.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz25[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz25;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz26(props) {\r\n    const history = useHistory();\r\n    const quiz26 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Tulip', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '1-2 weeks', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North America', isCorrect: false},\r\n                { answerText: 'Europe', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Love', isCorrect: true },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Fertility', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: true },\r\n                { answerText: 'No', isCorrect: false },\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz26.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz26.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{quiz26.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz26[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/tulip.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz26[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz26;","import {Form, Button} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport React, { useEffect, useState } from \"react\";\r\nfunction Quiz27(props) {\r\n    const history = useHistory();\r\n    const quiz27 = [\r\n        {\r\n            questionText: 'What Flower is this?',\r\n            answerOptions: [\r\n                { answerText: 'Zinnia', isCorrect: true },\r\n                { answerText: 'Lantana', isCorrect: false },\r\n                { answerText: 'Dahlia', isCorrect: false },\r\n                \r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How long do these live for?',\r\n            answerOptions: [\r\n                { answerText: '1 month', isCorrect: false },\r\n                { answerText: '1 year', isCorrect: false },\r\n                { answerText: '7-12 days', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: \"When do these bloom?\",\r\n            answerOptions: [\r\n                { answerText: 'Spring', isCorrect: true },\r\n                { answerText: 'Summer', isCorrect: false },\r\n                { answerText: 'Fall', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Where is this found?',\r\n            answerOptions: [\r\n                { answerText: 'Africa', isCorrect: false },\r\n                { answerText: 'North and Central America', isCorrect: false},\r\n                { answerText: 'Europe', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What does this flower symbolize?',\r\n            answerOptions: [\r\n                \r\n                { answerText: 'Saying Goodbye', isCorrect: true },\r\n                { answerText: 'Strength', isCorrect: false },\r\n                { answerText: 'Fertility', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Are these poisonous?',\r\n            answerOptions: [\r\n                { answerText: 'Not to Humans', isCorrect: false },\r\n                { answerText: 'Yes', isCorrect: false },\r\n                { answerText: 'No', isCorrect: true},\r\n            ],\r\n        },\r\n\r\n    ];\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < quiz27.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n      }\r\n    return (\r\n\t\t<div className='quiz'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of  {quiz27.length} \r\n                    \r\n                    <div><a onClick={refreshPage}>Take Quiz Again</a></div>\r\n                    <div><a onClick={() => {history.push('/')}}>Go to Home Page </a></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{Quiz27.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{quiz27[currentQuestion].questionText}</div>\r\n                        <img src=\"https://habahram.blob.core.windows.net/flowers/zinnia.jpg\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{quiz27[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Quiz27;","import {HashRouter, Switch, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport NavigationBar from './components/NavigationBar';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './App.css';\nimport { Container } from 'react-bootstrap';\nimport React, { useEffect, useState } from \"react\";\nimport Quiz from './components/quiz1';\nimport Quiz2 from './components/quiz2';\nimport Quiz3 from './components/quiz3';\nimport Quiz4 from './components/quiz4';\nimport Quiz5 from './components/quiz5';\nimport Quiz6 from './components/quiz6';\nimport Quiz7 from './components/quiz7';\nimport Quiz8 from './components/quiz8';\nimport Quiz9 from './components/quiz9';\nimport Quiz10 from './components/quiz10';\nimport Quiz11 from './components/quiz11';\nimport Quiz12 from './components/quiz12';\nimport Quiz13 from './components/quiz13';\nimport Quiz14 from './components/quiz14';\nimport Quiz15 from './components/quiz15';\nimport Quiz16 from './components/quiz16';\nimport Quiz17 from './components/quiz17';\nimport Quiz18 from './components/quiz18';\nimport Quiz19 from './components/quiz19';\nimport Quiz20 from './components/quiz20';\nimport Quiz21 from './components/quiz21';\nimport Quiz22 from './components/quiz22';\nimport Quiz23 from './components/quiz23';\nimport Quiz24 from './components/quiz24';\nimport Quiz25 from './components/quiz25';\nimport Quiz26 from './components/quiz26';\nimport Quiz27 from './components/quiz27';\n\nfunction App() {\n\n  const [username, setUsername] = useState(localStorage.getItem('username') || '');\n  let onLoggedIn = (email) => {\n    localStorage.setItem('username', email);\n    setUsername(email);\n  }\n  return (\n    <HashRouter>\n      <Container fluid>\n      <Header />\n      <NavigationBar username={username}/>\n      <Switch>\n        <Route exact path=\"/\" component={Home}>\n          <Home />\n          </Route>\n        <Route path=\"/login\">\n        <Login onLoggedIn= {onLoggedIn} />\n        </Route>\n        <Route path=\"/quiz\" component={Quiz}/>\n        <Route path=\"/quiz2\" component={Quiz2}/>\n        <Route path=\"/quiz3\" component={Quiz3}/>\n        <Route path=\"/quiz4\" component={Quiz4}/>\n        <Route path=\"/quiz5\" component={Quiz5}/>\n        <Route path=\"/quiz6\" component={Quiz6}/>\n        <Route path=\"/quiz7\" component={Quiz7}/>\n        <Route path=\"/quiz8\" component={Quiz8}/>\n        <Route path=\"/quiz9\" component={Quiz9}/>\n        <Route path=\"/quiz10\" component={Quiz10}/>\n        <Route path=\"/quiz11\" component={Quiz11}/>\n        <Route path=\"/quiz12\" component={Quiz12}/>\n        <Route path=\"/quiz13\" component={Quiz13}/>\n        <Route path=\"/quiz14\" component={Quiz14}/>\n        <Route path=\"/quiz15\" component={Quiz15}/>\n        <Route path=\"/quiz16\" component={Quiz16}/>\n        <Route path=\"/quiz17\" component={Quiz17}/>\n        <Route path=\"/quiz18\" component={Quiz18}/>\n        <Route path=\"/quiz19\" component={Quiz19}/>\n        <Route path=\"/quiz20\" component={Quiz20}/>\n        <Route path=\"/quiz21\" component={Quiz21}/>\n        <Route path=\"/quiz22\" component={Quiz22}/>\n        <Route path=\"/quiz23\" component={Quiz23}/>\n        <Route path=\"/quiz24\" component={Quiz24}/>\n        <Route path=\"/quiz25\" component={Quiz25}/>\n        <Route path=\"/quiz26\" component={Quiz26}/>\n        <Route path=\"/quiz27\" component={Quiz27}/>\n      </Switch>\n      <Footer />\n      </Container>\n    </HashRouter>\n    );\n  };\n  export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}